export default ponyfill;
/**
 * Returns an iterator of all results matching a string against a regular expression, including capturing groups.
 *
 * @param   {string}                             string  String to match.
 * @param   {string|RegExp}                      matcher Value to match original string. If a non-`RegExp` object is passed, it is implicitly converted to a `RegExp` by using `new RegExp(regexp, 'g')`. The `RegExp` object must have the `global` flag, otherwise a `TypeError` will be thrown.
 *
 * @returns {IterableIterator<RegExpMatchArray>}
 */
declare function ponyfill(string: string, matcher: string | RegExp): IterableIterator<RegExpMatchArray>;
/**
 * Returns an iterator of all results matching a string against a regular expression, including capturing groups. Uses native implementation if available.
 *
 * @param   {string}                             string  String to match.
 * @param   {string|RegExp}                      matcher Value to match original string. If a non-`RegExp` object is passed, it is implicitly converted to a `RegExp` by using `new RegExp(regexp, 'g')`. The `RegExp` object must have the `global` flag, otherwise a `TypeError` will be thrown.
 *
 * @returns {IterableIterator<RegExpMatchArray>}
 */
export function preferNative(string: string, matcher: string | RegExp): IterableIterator<RegExpMatchArray>;
//# sourceMappingURL=index.d.ts.map